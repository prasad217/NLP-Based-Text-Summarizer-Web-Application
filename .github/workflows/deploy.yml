name: Deploy to Elastic Beanstalk

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  AWS_REGION: eu-north-1
  ELASTIC_BEANSTALK_NAME: textsummarization-nlp-host
  ELASTIC_BEANSTALK_ENV_NAME: Textsummarization-nlp-host-env
  S3_BUCKET_NAME: textsummarizer-bucket

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Zip application
      run: |
        mkdir -p deploy-package
        zip -r deploy-package/application.zip .

    - name: Upload Artifact
      uses: actions/upload-artifact@v4.3.3
      with:
        name: deploy-files
        path: deploy-package/application.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/download-artifact@v4.1.7
      with:
        name: deploy-files

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{ env.AWS_REGION }}
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Deploy to S3
      run: |
        VERSION_LABEL="${{ github.sha }}-$(date +'%Y%m%d%H%M%S')"
        aws s3 cp deploy-files/application.zip s3://${{ env.S3_BUCKET_NAME }}/application-${VERSION_LABEL}.zip

    - name: Deploy to Elastic Beanstalk
      run: |
        VERSION_LABEL="${{ github.sha }}-$(date +'%Y%m%d%H%M%S')"
        aws elasticbeanstalk create-application-version --application-name ${{ env.ELASTIC_BEANSTALK_NAME }} --version-label $VERSION_LABEL --source-bundle S3Bucket="${{ env.S3_BUCKET_NAME }}",S3Key="application-${VERSION_LABEL}.zip"
        aws elasticbeanstalk update-environment --application-name ${{ env.ELASTIC_BEANSTALK_NAME }} --environment-name ${{ env.ELASTIC_BEANSTALK_ENV_NAME }} --version-label $VERSION_LABEL
        aws elasticbeanstalk wait environment-updated --application-name ${{ env.ELASTIC_BEANSTALK_NAME }} --environment-name ${{ env.ELASTIC_BEANSTALK_ENV_NAME }}
